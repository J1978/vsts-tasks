{
  "id": "5e1e3830-fbfb-11e5-aab1-090c92bc4988",
  "name": "ExtractFiles",
  "friendlyName": "Extract Files",
  "description": "Extract files from a variety of archive types, e.g. .zip, .tar, .7z",
  "author": "Batman",
  "helpMarkDown": "Replace with markdown to show in help",
  "category": "Utility",
  "visibility": [
    "Build",
    "Release"
  ],
  "demands": [],
  "version": {
    "Major": "0",
    "Minor": "1",
    "Patch": "18"
  },
  "minimumAgentVersion": "1.83.0",
  "instanceNameFormat": "Extract Files $(message)",
  "inputs": [
    {
      "name": "SourceFolder",
      "type": "filePath",
      "label": "Source Folder",
      "defaultValue": "$(Agent.BuildDirectory)",
      "required": true,
      "helpMarkDown": "Source folder containing archives files to extract."
    },
    {
      "name": "FilePattern",
      "type": "string",
      "label": "Archive file name or pattern",
      "defaultValue": "*.zip",
      "required": true,
      "helpMarkDown": "Name or pattern of the archive files to extract.  Supports a minimatch pattern. [More Information](http://go.microsoft.com/fwlink/?LinkID=708389)"
    },
    {
      "name": "TargetFolder",
      "type": "string",
      "label": "Target Folder",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Target folder to extract into."
    },
    {
      "name": "CleanTargetFolder",
      "type": "boolean",
      "label": "Clean target folder before extracting",
      "required": true,
      "defaultValue": "true",
      "helpMarkDown": "Select this option to clean the target directory before archive contents are extracted into it."
    },
    {
      "name": "FailOnExtractionError",
      "type": "boolean",
      "label": "Fail on Extraction Error",
      "defaultValue": "true",
      "required": false,
      "helpMarkDown": "If this is true, this task will fail if any file fails to extract properly."
    }
  ],  "execution": {
    "Node": {
      "target": "extractFiles.js",
      "argumentFormat": ""
    },
    "PowerShell": {
      "target": "$(currentDirectory)\\sample.ps1",
      "argumentFormat": "",
      "workingDirectory": "$(currentDirectory)"
    }
  }
}